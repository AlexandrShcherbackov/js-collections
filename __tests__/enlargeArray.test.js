import { dublicate, dublicateItemInArr, dublicateAllItemsInBinaryArray } from '../src/helpers/arrayHelper';

test('dublicate', () => {
  expect(dublicate(1)).toEqual([1, 1]);
});

test('dublicateItemInArr', () => {
  const testArr = [1, 2, 3];
  const resultArr = [1, 1, 2, 2, 3, 3];
  expect(testArr.slice().map(dublicateItemInArr).flat()).toEqual(resultArr);
});

test('solution', () => {
  const arr1 = [
    ['*', '*', '*', '*'],
    ['*', ' ', ' ', '*'],
    ['*', ' ', ' ', '*'],
    ['*', '*', '*', '*'],
  ];

  const arr1Enlarged = [
    ['*', '*', '*', '*', '*', '*', '*', '*'],
    ['*', '*', '*', '*', '*', '*', '*', '*'],
    ['*', '*', ' ', ' ', ' ', ' ', '*', '*'],
    ['*', '*', ' ', ' ', ' ', ' ', '*', '*'],
    ['*', '*', ' ', ' ', ' ', ' ', '*', '*'],
    ['*', '*', ' ', ' ', ' ', ' ', '*', '*'],
    ['*', '*', '*', '*', '*', '*', '*', '*'],
    ['*', '*', '*', '*', '*', '*', '*', '*'],
  ];

  const arr2 = [
    [' ', ' ', '*', ' ', ' '],
    [' ', '*', ' ', '*', ' '],
    [' ', '*', ' ', '*', ' '],
    ['*', ' ', ' ', ' ', '*'],
    ['*', ' ', ' ', ' ', '*'],
    [' ', '*', ' ', '*', ' '],
    [' ', '*', ' ', '*', ' '],
    [' ', ' ', '*', ' ', ' '],
  ];

  const arr2Enlarged = [
    [' ', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' ', '*', '*', ' ', ' '],
    ['*', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', '*'],
    ['*', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', '*'],
    ['*', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', '*'],
    ['*', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', '*'],
    [' ', ' ', '*', '*', ' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', '*', '*', ' ', ' ', '*', '*', ' ', ' '],
    [' ', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', ' '],
  ];

  const arr3 = [
    ['@', '@'],
    ['@', '|'],
    ['—', '|'],
    ['@', '|'],
    ['@', '@'],
  ];

  const arr3Enlarged = [
    ['@', '@', '@', '@'],
    ['@', '@', '@', '@'],
    ['@', '@', '|', '|'],
    ['@', '@', '|', '|'],
    ['—', '—', '|', '|'],
    ['—', '—', '|', '|'],
    ['@', '@', '|', '|'],
    ['@', '@', '|', '|'],
    ['@', '@', '@', '@'],
    ['@', '@', '@', '@'],
  ];

  const arr4 = [
    ['x'],
  ];

  const arr4Enlarged = [
    ['x', 'x'],
    ['x', 'x'],
  ];

  const result1 = dublicateAllItemsInBinaryArray(arr1);
  expect(result1).toEqual(arr1Enlarged);

  const result2 = dublicateAllItemsInBinaryArray(arr2);
  expect(result2).toEqual(arr2Enlarged);

  const result3 = dublicateAllItemsInBinaryArray(arr3);
  expect(result3).toEqual(arr3Enlarged);

  const result4 = dublicateAllItemsInBinaryArray(arr4);
  expect(result4).toEqual(arr4Enlarged);
});
